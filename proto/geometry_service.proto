syntax = "proto3";

package geometry;

import "geometry_types.proto";

// Geometry service for CAD operations
service GeometryService {
  // Primitive creation
  rpc CreateBox(BoxRequest) returns (ShapeResponse);
  rpc CreateCone(ConeRequest) returns (ShapeResponse);
  rpc CreateSphere(SphereRequest) returns (ShapeResponse);
  rpc CreateCylinder(CylinderRequest) returns (ShapeResponse);
  
  // Shape operations
  rpc DeleteShape(ShapeRequest) returns (StatusResponse);
  rpc TransformShape(TransformRequest) returns (ShapeResponse);
  rpc SetShapeColor(ColorRequest) returns (StatusResponse);
  
  // Mesh data retrieval
  rpc GetMeshData(ShapeRequest) returns (MeshData);
  rpc GetAllMeshes(EmptyRequest) returns (stream MeshData);
  
  // System operations
  rpc ClearAll(EmptyRequest) returns (StatusResponse);
  rpc GetSystemInfo(EmptyRequest) returns (SystemInfoResponse);
  rpc CreateDemoScene(EmptyRequest) returns (StatusResponse);
  
  // Unified model import/export (supports STEP, IGES, STL, OBJ, BREP, etc.)
  rpc ImportModelFile(ModelFileRequest) returns (ModelImportResponse);
  rpc ExportModelFile(ModelExportRequest) returns (ModelFileResponse);
}

// Request messages for primitive creation
message BoxRequest {
  Point3D position = 1;
  double width = 2;
  double height = 3;
  double depth = 4;
  Color color = 5;
}

message ConeRequest {
  Point3D position = 1;
  Vector3D axis = 2;
  double base_radius = 3;
  double top_radius = 4;
  double height = 5;
  Color color = 6;
}

message SphereRequest {
  Point3D center = 1;
  double radius = 2;
  Color color = 3;
}

message CylinderRequest {
  Point3D position = 1;
  Vector3D axis = 2;
  double radius = 3;
  double height = 4;
  Color color = 5;
}

// Generic request messages
message ShapeRequest {
  string shape_id = 1;
}

message TransformRequest {
  string shape_id = 1;
  Transform transform = 2;
}

message ColorRequest {
  string shape_id = 1;
  Color color = 2;
}

message EmptyRequest {
  // Empty request for parameterless operations
}

// Response messages
message ShapeResponse {
  string shape_id = 1;
  bool success = 2;
  string message = 3;
  ShapeProperties properties = 4;
}

message StatusResponse {
  bool success = 1;
  string message = 2;
}

message SystemInfoResponse {
  string version = 1;
  int32 active_shapes = 2;
  string occt_version = 3;
}

// Unified model file operations
message ModelFileRequest {
  string file_path = 1;
  ModelImportOptions options = 2;
}

message ModelImportOptions {
  bool auto_detect_format = 1;    // Auto-detect file format
  string force_format = 2;        // Force specific format (STEP, IGES, STL, OBJ, BREP, etc.)
  bool import_colors = 3;         // Import colors if available
  bool import_names = 4;          // Import part names if available
  double precision = 6;           // Mesh precision (default: 0.01)
  bool merge_shapes = 7;          // Merge multiple shapes into compound
}

message ModelImportResponse {
  bool success = 1;
  string message = 2;
  repeated string shape_ids = 3;  // IDs of created shapes
  ModelFileInfo file_info = 4;
  string detected_format = 5;     // Auto-detected file format
}

message ModelExportRequest {
  repeated string shape_ids = 1;
  ModelExportOptions options = 2;
}

message ModelExportOptions {
  string format = 1;              // Target format (STEP, IGES, STL, OBJ, BREP, etc.)
  bool export_colors = 2;         // Export colors if supported
  bool export_names = 3;          // Export part names if supported
  string units = 6;               // Units (default: "mm")
  bool binary_mode = 10;          // Use binary format where supported (STL, etc.)
}

message ModelFileResponse {
  bool success = 1;
  string message = 2;
  bytes model_data = 3;           // Generated file content
  string filename = 4;            // Suggested filename
  ModelFileInfo file_info = 5;
}

message ModelFileInfo {
  string filename = 1;
  int64 file_size = 2;
  int32 shape_count = 3;
  string format = 4;              // File format (STEP, IGES, STL, BREP, etc.)
  string creation_time = 5;
}